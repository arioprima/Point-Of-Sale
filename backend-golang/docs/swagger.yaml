host: localhost:8080
info:
  contact: {}
  description: Tag a service for point of sale using golang
  title: Point Of Sale API Documentation
  version: "1.0"
paths:
  /api/auth/login:
    post:
      consumes:
      - application/json
      description: Logs in a user.
      parameters:
      - description: Username and Password
        in: body
        name: request
        required: true
        schema:
          type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
      summary: Login
      tags:
      - Auth
  /api/auth/register:
    post:
      consumes:
      - application/json
      description: Registers a new user.
      parameters:
      - description: First Name
        in: body
        name: username
        required: true
        schema:
          type: string
      - description: Last Name
        in: body
        name: password
        required: true
        schema:
          type: string
      - description: Username
        in: body
        name: username
        required: true
        schema:
          type: string
      - description: Email
        in: body
        name: email
        required: true
        schema:
          type: string
      - description: Password
        in: body
        name: password
        required: true
        schema:
          type: string
      - description: Role
        in: body
        name: role
        required: true
        schema:
          type: string
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            type: string
      summary: Register
      tags:
      - Auth
  /api/users:
    get:
      consumes:
      - application/json
      description: Retrieves all users.
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
      summary: Find All
      tags:
      - User
  /api/users/{id}:
    get:
      consumes:
      - application/json
      description: Finds a user by ID.
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
      summary: Find By Id
      tags:
      - User
    put:
      consumes:
      - application/json
      description: Updates user information.
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: string
      - description: Username
        in: body
        name: username
        required: true
        schema:
          type: string
      - description: Email
        in: body
        name: email
        required: true
        schema:
          type: string
      - description: Password
        in: body
        name: password
        required: true
        schema:
          type: string
      - description: Role
        in: body
        name: role
        required: true
        schema:
          type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
      summary: Update
      tags:
      - User
  /api/users/email/{email}:
    get:
      consumes:
      - application/json
      description: Finds a user by email.
      parameters:
      - description: Email
        in: path
        name: email
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
      summary: Find By Email
      tags:
      - User
  /api/users/username/{username}:
    get:
      consumes:
      - application/json
      description: Finds a user by username.
      parameters:
      - description: Username
        in: path
        name: username
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
      summary: Find By Username
      tags:
      - User
swagger: "2.0"
